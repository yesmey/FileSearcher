GC::malloc(gcx = 0027CE78, size = 120 bits = 1, ti = core.thread.Thread)
Setting a pointer bitmap for core.thread.Thread at 01C70F80 + 120
	Setting bitmap for new object (core.thread.Thread)
		at 01C70F80		copying from 0044A784 + 120: 001000110001111111010000000011
	malloc => 01C70F80
GC.addRange_hp(0045A760 - 0045AA20, tls=0)
GC.addRange_hp(0045AACC - 0045AB1C, tls=1)
GC::malloc(gcx = 0027CE78, size = 11 bits = 4a, ti = TypeInfo_a)
	malloc => 01C71FF0
GC::malloc(gcx = 0027CE78, size = 47 bits = 4a, ti = TypeInfo_a)
	malloc => 01C72FC0
GC::malloc(gcx = 0027CE78, size = 47 bits = 4a, ti = TypeInfo_a)
	malloc => 01C72F80
GC::malloc(gcx = 0027CE78, size = 82 bits = 4a, ti = TypeInfo_a)
	malloc => 01C70F00
GC::malloc(gcx = 0027CE78, size = 83 bits = 4a, ti = TypeInfo_a)
	malloc => 01C70E80
GC::malloc(gcx = 0027CE78, size = 522 bits = 4a, ti = TypeInfo_u)
	malloc => 01C73C00
GC::malloc(gcx = 0027CE78, size = 12 bits = 0, ti = std.array.Appender!string.Appender.Data)
Setting a pointer bitmap for std.array.Appender!string.Appender.Data at 01C71FE0 + 12
	Setting bitmap for new object (std.array.Appender!string.Appender.Data)
		at 01C71FE0		copying from 00441FE4 + 12: 001
	malloc => 01C71FE0
GC::malloc(gcx = 0027CE78, size = 8 bits = 2, ti = null)
	malloc => 01C71FD0
GC::malloc(gcx = 0027CE78, size = 32 bits = 2, ti = null)
	malloc => 01C74FE0
GC::malloc(gcx = 0027CE78, size = 64 bits = 2, ti = null)
	malloc => 01C72F40
GC::malloc(gcx = 0027CE78, size = 128 bits = 2, ti = null)
	malloc => 01C70E00
GC::malloc(gcx = 0027CE78, size = 256 bits = 2, ti = null)
	malloc => 01C75F00
GC::malloc(gcx = 0027CE78, size = 512 bits = 2, ti = null)
	malloc => 01C76E00
GC::malloc(gcx = 0027CE78, size = 1024 bits = 2, ti = null)
	malloc => 01C73800
GC::malloc(gcx = 0027CE78, size = 48 bits = 4a, ti = TypeInfo_a)
	malloc => 01C72F00
GC::malloc(gcx = 0027CE78, size = 12 bits = 0, ti = std.array.Appender!(immutable(wchar)[]).Appender.Data)
Setting a pointer bitmap for std.array.Appender!(immutable(wchar)[]).Appender.Data at 01C71FC0 + 12
	Setting bitmap for new object (std.array.Appender!(immutable(wchar)[]).Appender.Data)
		at 01C71FC0		copying from 00442084 + 12: 001
	malloc => 01C71FC0
GC::malloc(gcx = 0027CE78, size = 16 bits = 2, ti = null)
	malloc => 01C71FB0
GC::malloc(gcx = 0027CE78, size = 32 bits = 2, ti = null)
	malloc => 01C74FC0
GC::malloc(gcx = 0027CE78, size = 64 bits = 2, ti = null)
	malloc => 01C72EC0
GC::malloc(gcx = 0027CE78, size = 128 bits = 2, ti = null)
	malloc => 01C70D80
GC::malloc(gcx = 0027CE78, size = 95 bits = 4a, ti = TypeInfo_u)
	malloc => 01C70D00
GC::malloc(gcx = 0027CE78, size = 29 bits = 4a, ti = TypeInfo_a)
	malloc => 01C74FA0
GC::malloc(gcx = 0027CE78, size = 2065 bits = 2a, ti = TypeInfo_a)
In bigAlloc.  Size:  2065
Gcx.fullcollect()
Set bits
Marked free entries.
	scan stacks.
marking tls range from 0018F868 to 00190000
		@0018F9BC -> 01C74FA0: mark(x4fa) = 0
		@0018FA7C -> 01C74FA0: mark(x4fa) = 67108864
		@0018FB60 -> 01C70E80: mark(xe8) = 0
		@0018FB68 -> 01C73800: mark(x380) = 0
		@0018FB78 -> 01C70D00: mark(xd0) = 0
		@0018FBAC -> 01C71FF0: mark(x1ff) = 0
		@0018FBF4 -> 01C70F00: mark(xf0) = 0
		@0018FC70 -> 01C70E80: mark(xe8) = 256
marking tls range from 01C70FD0 to 01C70FF0
		@01C70FD4 -> 01C70F80: mark(xf8) = 0
not skipping 01C70FB0, biti = 1009, at 01C70FC4
		@01C70FC4 -> 01C70FB0: mark(xf8) = 16777216
marking tls hp range from 0045AACC to 0045AB1C, base 00274490
Mark call for 1 002744A0 with type info TypeInfo_AssociativeArray: rtInfo: has 1 pointers
Mark call for 1 002744B0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 002744C0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 002744D0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 002744D4 with type info core.thread.Thread: class reference
		@002744D4 -> 01C70F80: mark(xf8) = 16777216
Mark call for 1 002744F0 with type info core.thread.Fiber: class reference
Mark call for 1 00274500 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00274504 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00274508 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00274510 with type info std.file.DirIteratorImpl: mark with rtInfo
	scan roots[]
	scan ranges[]
	mark hasPointer area
marking hp range from 0045A760 to 0045AA20
Mark call for 1 00441C60 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 00441D60 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441D80 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441D90 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DA0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DB0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DC0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DD0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DE0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DF0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E00 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E10 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E20 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E30 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E40 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E50 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E60 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E70 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E80 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E90 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EA0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EB0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EC0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441ED0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EE0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EF0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F00 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F10 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F20 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F30 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F40 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F50 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F60 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F70 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F80 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00442100 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00442104 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00442108 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0044210C with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00442110 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045ABD0 with type info std.stdio.File: mark with rtInfo
Mark call for 1 0045ABDC with type info std.stdio.File: mark with rtInfo
Mark call for 1 0045ABE8 with type info std.stdio.File: mark with rtInfo
Mark call for 1 00443200 with type info TypeInfo_StaticArray: rtInfo: has 46 pointers
Mark call for 1 0045AC10 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045AC30 with type info TypeInfo_Array: mark with rtInfo
Mark call for 1 0045AC40 with type info rt.dmain2.CArgs: mark with rtInfo
Mark call for 1 0045AC50 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045AC60 with type info gc.gc.GC: class reference
Mark call for 1 0045AC70 with type info gc.proxy.Proxy: mark with rtInfo
Mark call for 1 0045ACCC with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045ACD0 with type info rt.sections_win32.SectionGroup: mark with rtInfo
Mark call for 1 0045AD00 with type info TypeInfo_Array: mark with rtInfo
Mark call for 1 0045AD14 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00446028 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00446110 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 004461F0 with type info TypeInfo_StaticArray: rtInfo: has 24 pointers
Mark call for 1 00446280 with type info TypeInfo_StaticArray: rtInfo: has 24 pointers
Mark call for 1 00446460 with type info std.stdio.File.Impl: mark with rtInfo
Mark call for 1 0044646C with type info std.stdio.File.Impl: mark with rtInfo
Mark call for 1 00446478 with type info std.stdio.File.Impl: mark with rtInfo
Mark call for 1 0045AD54 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045AD58 with type info gc.gc.GCMutex: class reference
Mark call for 1 0045AD90 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045AD94 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045ADA0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045ADB0 with type info rt.critical_.D_CRITICAL_SECTION: mark with rtInfo
Mark call for 1 0045AE40 with type info core.sys.windows.windows._RTL_CRITICAL_SECTION: mark with rtInfo
Mark call for 1 0045AE6C with type info core.thread.Thread: class reference
		@0045AE6C -> 01C70F80: mark(xf8) = 16777216
Mark call for 1 0045AEC0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
		@0045AEC0 -> 01C70FB0: mark(xf8) = 16777216
Mark call for 1 0045AEC8 with type info core.thread.Thread: class reference
		@0045AEC8 -> 01C70F80: mark(xf8) = 16777216
Mark call for 1 0045AEE0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00448320 with type info std.datetime.UTC: rtInfo: has 1 pointers
Mark call for 1 00448A90 with type info std.datetime.LocalTime: rtInfo: has 1 pointers
Mark call for 1 0045AFA0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045B130 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0044B1A0 with type info TypeInfo_StaticArray: mark with rtInfo
Mark call for 1 0045B180 with type info core.sys.windows.dbghelp.DbgHelp: mark with rtInfo
Mark call for 1 0045B1C0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045B2A0 with type info TypeInfo_Aya: mark with rtInfo
Mark call for 1 0044F870 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 00450660 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 00452730 with type info std.uni.Trie!(ushort, dchar, 1114112u, sliceBits!(13u, 21u), sliceBits!(6u, 13u), sliceBits!(0u, 6u)).Trie: rtInfo: has 8 pointers
Mark call for 1 00453B30 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 0045C7D0 with type info std.file.DirIteratorImpl: rtInfo: has 22 pointers
Mark call for 1 00456810 with type info std.uni.Trie!(ushort, dchar, 1114112u, sliceBits!(13u, 21u), sliceBits!(6u, 13u), sliceBits!(0u, 6u)).Trie: rtInfo: has 8 pointers
Mark call for 1 00457A20 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 00458C30 with type info std.uni.Trie!(BitPacked!(bool, 1), dchar, 1114112u, sliceBits!(13u, 21u), sliceBits!(8u, 13u), sliceBits!(0u, 8u)).Trie: rtInfo: has 8 pointers
	scan heap
	free'ing
	collecting 01C70D80
	collecting 01C70E00
	collecting 01C71FB0
	collecting 01C71FC0
	collecting 01C71FD0
	collecting 01C71FE0
	collecting 01C72EC0
	collecting 01C72F00
	collecting 01C72F40
	collecting 01C72F80
	collecting 01C72FC0
	collecting 01C73C00
	collecting 01C74FC0
	collecting 01C74FE0
	collecting 01C75F00
	collecting 01C76E00
	free complete pages
	recovered pages = 3
	free'd 2496 bytes, 0 pages from 1 pools
Minimizing.
Done minimizing.
Pool 002AA4B8:  256 really free, 256 supposedly free
Pool 002AA4B8:  255 really free, 255 supposedly free
Got large alloc:  01F70000, pt = 8, np = 1
	malloc => 01F70000
Emplacing TypeInfo_a at 01F70010 + 4080
Setting a pointer bitmap for TypeInfo_a at 01F70010 + 4080
	Compiler generated rtInfo: no pointers
Gcx.fullcollect()
Set bits
Marked free entries.
	scan roots[]
	scan ranges[]
	mark hasPointer area
marking hp range from 0045A760 to 0045AA20
Mark call for 1 00441C60 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 00441D60 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441D80 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441D90 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DA0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DB0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DC0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DD0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DE0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441DF0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E00 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E10 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E20 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E30 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E40 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E50 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E60 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E70 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E80 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441E90 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EA0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EB0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EC0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441ED0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EE0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441EF0 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F00 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F10 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F20 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F30 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F40 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F50 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F60 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F70 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00441F80 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00442100 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00442104 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00442108 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0044210C with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00442110 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045ABD0 with type info std.stdio.File: mark with rtInfo
Mark call for 1 0045ABDC with type info std.stdio.File: mark with rtInfo
Mark call for 1 0045ABE8 with type info std.stdio.File: mark with rtInfo
Mark call for 1 00443200 with type info TypeInfo_StaticArray: rtInfo: has 46 pointers
Mark call for 1 0045AC10 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045AC30 with type info TypeInfo_Array: mark with rtInfo
Mark call for 1 0045AC40 with type info rt.dmain2.CArgs: mark with rtInfo
Mark call for 1 0045AC50 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045AC60 with type info gc.gc.GC: class reference
Mark call for 1 0045AC70 with type info gc.proxy.Proxy: mark with rtInfo
Mark call for 1 0045ACCC with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045ACD0 with type info rt.sections_win32.SectionGroup: mark with rtInfo
Mark call for 1 0045AD00 with type info TypeInfo_Array: mark with rtInfo
Mark call for 1 0045AD14 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00446028 with type info TypeInfo_Aya: rtInfo: has 2 pointers
Mark call for 1 00446110 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 004461F0 with type info TypeInfo_StaticArray: rtInfo: has 24 pointers
Mark call for 1 00446280 with type info TypeInfo_StaticArray: rtInfo: has 24 pointers
Mark call for 1 00446460 with type info std.stdio.File.Impl: mark with rtInfo
Mark call for 1 0044646C with type info std.stdio.File.Impl: mark with rtInfo
Mark call for 1 00446478 with type info std.stdio.File.Impl: mark with rtInfo
Mark call for 1 0045AD54 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045AD58 with type info gc.gc.GCMutex: class reference
Mark call for 1 0045AD90 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045AD94 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045ADA0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045ADB0 with type info rt.critical_.D_CRITICAL_SECTION: mark with rtInfo
Mark call for 1 0045AE40 with type info core.sys.windows.windows._RTL_CRITICAL_SECTION: mark with rtInfo
Mark call for 1 0045AE6C with type info core.thread.Thread: class reference
		@0045AE6C -> 01C70F80: mark(xf8) = 0
not skipping 01C70FB0, biti = 1009, at 01C70FC4
		@01C70FC4 -> 01C70FB0: mark(xf8) = 16777216
Mark call for 1 0045AEC0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
		@0045AEC0 -> 01C70FB0: mark(xf8) = 16777216
Mark call for 1 0045AEC8 with type info core.thread.Thread: class reference
		@0045AEC8 -> 01C70F80: mark(xf8) = 16777216
Mark call for 1 0045AEE0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 00448320 with type info std.datetime.UTC: rtInfo: has 1 pointers
Mark call for 1 00448A90 with type info std.datetime.LocalTime: rtInfo: has 1 pointers
Mark call for 1 0045AFA0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045B130 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0044B1A0 with type info TypeInfo_StaticArray: mark with rtInfo
Mark call for 1 0045B180 with type info core.sys.windows.dbghelp.DbgHelp: mark with rtInfo
Mark call for 1 0045B1C0 with type info TypeInfo_Pointer: rtInfo: has 1 pointers
Mark call for 1 0045B2A0 with type info TypeInfo_Aya: mark with rtInfo
Mark call for 1 0044F870 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 00450660 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 00452730 with type info std.uni.Trie!(ushort, dchar, 1114112u, sliceBits!(13u, 21u), sliceBits!(6u, 13u), sliceBits!(0u, 6u)).Trie: rtInfo: has 8 pointers
Mark call for 1 00453B30 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 0045C7D0 with type info std.file.DirIteratorImpl: rtInfo: has 22 pointers
Mark call for 1 00456810 with type info std.uni.Trie!(ushort, dchar, 1114112u, sliceBits!(13u, 21u), sliceBits!(6u, 13u), sliceBits!(0u, 6u)).Trie: rtInfo: has 8 pointers
Mark call for 1 00457A20 with type info TypeInfo_Array: rtInfo: has 2 pointers
Mark call for 1 00458C30 with type info std.uni.Trie!(BitPacked!(bool, 1), dchar, 1114112u, sliceBits!(13u, 21u), sliceBits!(8u, 13u), sliceBits!(0u, 8u)).Trie: rtInfo: has 8 pointers
	scan heap
	free'ing
	collecting 01C70D00
	collecting 01C70E80
	collecting 01C70F00
	collecting 01C71FF0
	collecting 01C73800
	collecting 01C74FA0
	collecting big 01F70000
	free complete pages
	recovered pages = 3
	free'd 1456 bytes, 1 pages from 2 pools
